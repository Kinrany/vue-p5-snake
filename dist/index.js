!function(e){var t={};function i(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(r,n,function(t){return e[t]}.bind(null,n));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t){const i={template:"#game-grid",components:{p5:VueP5},props:["size","head","tail"],methods:{setup(e){e.resizeCanvas(200,200)},draw(e){e.background("darkgreen"),e.stroke("black"),e.strokeWeight(2);for(let t=0;t<=this.size;++t){let{x:i,y:r}=this.gridToCanvas(e,{x:t,y:t});e.line(i,0,i,e.height),e.line(0,r,e.width,r)}this.tail.forEach(t=>{let{x:i,y:r}=this.gridToCanvas(e,t,{x:.5,y:.5});e.fill("lightblue"),e.ellipse(i,r,10,10)});let{x:t,y:i}=this.gridToCanvas(e,this.head,{x:.5,y:.5});e.fill("blue"),e.ellipse(t,i,10,10)},keyPressed(e){const t={87:{x:0,y:-1},65:{x:-1,y:0},83:{x:0,y:1},68:{x:1,y:0}};e in t&&this.$emit("move",t[e])},gridToCanvas({width:e,height:t},{x:i,y:r},{x:n=0,y:s=0}={}){return{x:(i+n)*e/this.size,y:(r+s)*t/this.size}}}};new Vue({el:".app",components:{"game-grid":i},data:{grid_size:10,head:{x:2,y:2},tail:[],length:5},computed:{gameIsOver(){return this.tail.find(({x:e,y:t})=>e==this.head.x&&t==this.head.y)}},methods:{move({x:e,y:t}){if(this.gameIsOver)return;const i={x:this.head.x+e,y:this.head.y+t};i.x<0||i.x>=this.grid_size||i.y<0||i.y>=this.grid_size||(this.tail.push(this.head),this.tail=this.tail.slice(-this.length),this.head=i)},reset(){Object.assign(this.$data,{grid_size:10,head:{x:2,y:2},tail:[],length:5})}}})}]);